apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+8:00")) //  Asia/Shanghai
}

/**
 * open project.properties file,
 * get versionCode and increment,
 * store this versionCode and return it.
 */
def getVersionCode() {
    def versionFile = file('project.properties')
    if (versionFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['versionCode'].toInteger()
//        def runTasks = gradle.startParameter.taskNames
//        if ('assembleRelease' in runTasks) {//work only in assembleRelease task
        versionProps['versionCode'] = (++versionCode).toString()
        versionProps.store(versionFile.newWriter(), null)
//        }
        return versionCode
    }
}

android {

    buildToolsVersion versionBuildTool

    compileSdkVersion versionCompiler
    packagingOptions {
        exclude 'META-INF/MANIFEST.MF'
    }
    def currentVersionCode = getVersionCode()
    defaultConfig {
        applicationId "com.laotie.serial"
        minSdkVersion versionMin
        targetSdkVersion versionTarget
        versionCode currentVersionCode
        versionName "1.0.1"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }
    signingConfigs {
        config {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./platform.jks')
            storePassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "SenseEngineCamera-demo" +
                            "-v${defaultConfig.versionName}" +
                            "-release.apk"
                }
            }
        }

        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "SenseEngineCamera-demo" +
                            "-v${defaultConfig.versionName}" +
                            "-debug.apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':libSerial')

//    implementation 'androidx.appcompat:appcompat:1.1.0'

//    implementation(name:'libuvccamera-release', ext:'aar')
//    implementation(name:'libmtc-release', ext:'aar')

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"
    implementation 'com.leon:lfilepickerlibrary:1.8.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.bumptech.glide:glide:4.10.0' // Glide

    api(rootProject.ext.dependencies["material-dialogs-core"]) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["material-dialogs-commons"]) {
        exclude group: 'com.android.support'
    }
    //    implementation project(path: ':libmtc')
}
